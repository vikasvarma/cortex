import React from 'react';
import { CloseIcon, SearchIcon, FolderIcon } from '../Icons';

const fs = window.require('fs');

export default class CreateDatasetDialog extends React.Component {

    constructor(props) {
        super(props);
    }

    render() {

        const { onCancel, onSubmit } = this.props;

        return (
            <div
                className="justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none bg-black bg-opacity-50"
            >
                <div
                    className="flex relative my-6 mx-auto w-2/3 h-2/3 border border-black"
                    style={{
                        minWidth: "800px",
                        minHeight: "450px",
                        maxWidth: "1400px",
                        maxHeight: "1200px",
                    }}
                >
                    <div
                        className="relative flex flex-col w-full bg-white outline-none focus:outline-none"
                    >
                        <div className="grid h-full"
                            style={{
                                backgroundColor: "#EFBBA4",
                                gridTemplateColumns: "43% 57%",
                            }}
                        >
                            <div
                                className="grid grid-flow-row px-6 py-6 mr-10 border-r border-black"
                                style={{
                                    gridTemplateRows: "40% 60%",
                                }}
                            >
                                <p
                                    className="flex flex-col w-full font-semibold m-auto px-8 font-playfair"
                                    style={{
                                        fontSize: "32px",
                                        lineHeight: "40px",
                                    }}
                                >
                                    <span className="block">Import</span>
                                    <span className="block">Dataset Folder</span>
                                </p>
                                <div className="flex place-items-center justify-center items-center">
                                    <ImageFolderIllustration />
                                </div>
                            </div>
                            <div className="bg-white">
                                <DatasetForm
                                    onSubmit={onSubmit}
                                    onCancelClick={onCancel}
                                    onClose={onCancel}
                                />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        )
    }
}

class DatasetForm extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            data: {
                name: "",
                path: "",
                description: "",
                classes: new Set(),
            },
            isValidInput: false,
        }

        this.path = React.createRef();
        this.classField = React.createRef();
    }

    setFolder = (evd) => {
        var folder = evd.target.value;
        var info = this.state.data;
        info.path = folder;
        this.setState({ data: info })
    }

    setName = (evd) => {
        var info = this.state.data;
        info.name = evd.target.value;
        this.setState({ data: info })
    }

    setDescription = (evd) => {
        var info = this.state.data;
        info.description = evd.target.value;
        this.setState({ data: info })
    }

    addClass = (evd) => {
        if (evd.key == 'Enter') {
            var info = this.state.data;
            info.classes.add(evd.target.value);
            this.setState({ data: info })
            this.classField.current.value = "";
        }
    }

    removeClass = (evd) => {
        var info = this.state.data;
        info.classes.delete(evd.currentTarget.id);
        this.setState({ data: info })
    }

    validateForm = (evd) => {
        console.log("validating....")
        evd.preventDefault();
    }

    selectFolder = async (evd) => {
        const { dialog } = window.require('electron').remote;
        var info = this.state.data;
        const folders = await dialog.showOpenDialog({
            properties: ["openDirectory"]
        });
        info.path = folders.filePaths[0];
        this.setState({ data: info })
    }

    submit = (evd) => {
        const { onSubmit } = this.props;
        var info = this.state.data;
        info.classes = Array.from(info.classes);

        if (onSubmit != undefined) {
            onSubmit(info);
        }
    }

    render() {

        const { onCancelClick, onClose } = this.props;
        const isValidData = fs.existsSync(this.state.data.path) &&
            this.state.data.name.length > 0;
        const classes = Array.from(this.state.data.classes);

        return (
            <div
                className="grid w-full h-full py-8 px-4"
                style={{
                    gridTemplateRows: "2rem 1fr 4rem"
                }}
            >
                <div className="flex items-start justify-end">
                    <div
                        className="flex w-6 h-6 cursor-pointer place-items-center items-center justify-center"
                        onClick={onClose}
                    >
                        <CloseIcon width="12" height="12" className="cursor-pointer" />
                    </div>
                </div>
                <div className="flex flex-col py-3 space-y-4 w-full px-8">
                    <div
                        className="flex w-full h-8 pl-3 pr-1 items-center border-b"
                        style={{
                            borderColor:
                                (fs.existsSync(this.state.data.path) || this.state.data.path === "") ? "black" : "red",
                        }}
                    >
                        <SearchIcon width="14" height="14" />
                        <input
                            ref={this.path}
                            type="text"
                            id="search"
                            value={this.state.data.path}
                            required={true}
                            onChange={this.setFolder}
                            className="flex flex-grow text-gray-500 text-sm mx-2 truncate active:outline-none focus:outline-none"
                            placeholder="Browse"
                        />
                        <div
                            className="flex relative w-8 h-8 justify-center items-center cursor-pointer focus:outline-none"
                            onClick={this.selectFolder}
                        >
                            <FolderIcon className="flex cursor-pointer" />
                        </div>
                    </div>
                    <div className="flex w-full border-black border-b px-3 mt-4 h-10 items-end py-1">
                        <label className="font-roboto text-sm scale-y-125">Name</label>
                        <input
                            type="text"
                            id="name"
                            value={this.state.data.name}
                            required={true}
                            onChange={this.setName}
                            className="flex flex-grow text-gray-700 text-sm mx-2 truncate active:outline-none focus:outline-none"
                            placeholder='...'
                        />
                    </div>
                    <div className="flex h-3/5 border-black border px-3 mt-4 
                    items-start py-2">
                        <label className="font-roboto text-sm scale-y-125">Description</label>
                        <textarea
                            value={this.state.data.description}
                            onChange={this.setDescription}
                            className="flex w-full h-full flex-grow text-gray-700 text-sm mx-2 px-2 active:outline-none focus:outline-none"
                        />
                    </div>
                    <div className="flex flex-col mt-4 place-items-start items-start py-2">
                        <div className="flex w-full mb-4 items-center border-black border-b">
                            <label className="font-roboto text-sm scale-y-125">Classes</label>
                            <input
                                ref={this.classField}
                                type="text"
                                onKeyDown={this.addClass}
                                className="flex flex-grow text-gray-700 text-sm mx-2 px-2 my-3 active:outline-none focus:outline-none"
                            />
                        </div>
                        <div className="flex ml-16 flex-wrap flex-row gap-4">
                            {
                                classes.map((name, ind) => (
                                    <div key={ind}
                                        className="pr-3 pl-1 flex place-items-start items-center h-8 rounded-full border border-black"
                                    >
                                        <div
                                        id={name}
                                        className="flex h-8 w-6 place-items-center justify-center items-center"
                                        onClick={this.removeClass}>
                                        <CloseIcon width="9" height="9" />
                                        </div>
                                        <p className="text-sm font-roboto font-regular text-gray-700 align-middle justify-start">{name}</p>
                                    </div>
                                ))
                            }
                        </div>
                    </div>
                </div>
                <div className="flex space-x-3 justify-end items-center px-12">
                    <button
                        disabled={!isValidData}
                        onClick={this.submit}
                        className="flex w-24 h-8 font-normal font-roboto place-items-center items-center justify-center text-sm text-black focus:outline-none"
                        style={{
                            backgroundColor: "#EFBBA4",
                            opacity: isValidData ? "1" : "0.3",
                            cursor: isValidData ? "pointer" : "not-allowed",
                        }}
                    >
                        Add
                    </button>
                    <button
                        onClick={onCancelClick}
                        className="flex w-24 h-8 font-normal font-roboto place-items-center items-center justify-center text-sm text-white bg-black focus:outline-none"
                    >
                        Cancel
                    </button>
                </div>
            </div >
        );
    }
}

const ImageFolderIllustration = () => {
    return (
        <svg className="object-contain m-auto" width="80%" height="100%" viewBox="0 0 393 333" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_122_194)">
                <path d="M315.586 87.0824L308.893 60.762L299.48 23.7554L298.946 21.6664V21.6613L295.225 7.02802C294.613 4.63236 293.075 2.57742 290.949 1.31401C288.824 0.050608 286.284 -0.31809 283.887 0.288814L259.158 6.57635L104.644 45.8773C102.248 46.4896 100.193 48.0273 98.9296 50.1528C97.6662 52.2784 97.2975 54.8183 97.9044 57.2153L103.237 78.1875L116.788 131.46L121.884 151.503L122.146 152.529H123.275L123.013 151.503L118.143 132.337V132.332L104.007 76.7657L98.9668 56.9485C98.4314 54.8325 98.7569 52.5905 99.8721 50.7143C100.987 48.838 102.801 47.4806 104.916 46.9397L259.106 7.72096L284.154 1.35131C286.27 0.815834 288.512 1.14139 290.388 2.25656C292.264 3.37174 293.622 5.1855 294.163 7.30008L298.115 22.8316L298.648 24.9411L307.795 60.9058L314.452 87.0824L314.729 88.1808H315.869L315.586 87.0824Z" fill="white" />
                <path d="M149.299 123.639C163.914 123.639 175.762 111.791 175.762 97.1764C175.762 82.5614 163.914 70.7136 149.299 70.7136C134.684 70.7136 122.836 82.5614 122.836 97.1764C122.836 111.791 134.684 123.639 149.299 123.639Z" fill="white" fillOpacity="0.56" />
                <path d="M209.33 87.0824L210.598 88.1808H190.446C188.264 88.1832 186.171 89.0514 184.628 90.5948C183.084 92.1382 182.216 94.2309 182.214 96.4136V159.217L181.921 174.086L169.043 162.569L167.837 162.877L158.29 154.454C156.885 153.212 155.074 152.528 153.199 152.529H128.079L128.464 151.503L133.484 138.091L161.945 61.999L164.871 54.182C165.05 53.7015 165.344 53.2716 165.726 52.9291C166.108 52.5866 166.567 52.3415 167.064 52.215C167.561 52.0884 168.082 52.084 168.581 52.2022C169.08 52.3204 169.544 52.5576 169.931 52.8937L189.081 69.5081L200.353 79.291L209.33 87.0824Z" fill="#D6787A" />
                <path d="M293.116 87.0824L294.388 88.1808H232.724L233.14 87.0824L246.275 52.4112C246.455 51.9323 246.748 51.504 247.129 51.1627C247.51 50.8214 247.968 50.5772 248.464 50.4507C248.96 50.3242 249.479 50.3193 249.977 50.4363C250.475 50.5533 250.938 50.7889 251.325 51.1229L277.435 73.5937L278.939 74.882L293.116 87.0824Z" fill="#D6787A" />
                <path d="M317.019 97.8555C314.614 97.8537 312.241 98.4101 310.088 99.481C307.934 100.552 306.058 102.108 304.608 104.027C303.052 103.357 301.353 103.084 299.665 103.233C297.977 103.381 296.353 103.947 294.937 104.879C293.522 105.81 292.36 107.079 291.556 108.57C290.752 110.062 290.33 111.73 290.33 113.424H332.588C332.588 111.38 332.185 109.355 331.403 107.466C330.62 105.577 329.474 103.861 328.028 102.415C326.582 100.97 324.866 99.823 322.977 99.0406C321.088 98.2582 319.064 97.8555 317.019 97.8555Z" fill="white" />
                <path d="M375.392 87.0825H190.446C188.366 87.0862 186.345 87.7837 184.705 89.0647C183.066 90.3458 181.9 92.1372 181.393 94.1553V94.1605C181.209 94.8974 181.116 95.6541 181.115 96.4137V174.584L181.716 175.113L182.214 175.554V96.4137C182.216 94.231 183.084 92.1383 184.628 90.5949C186.171 89.0514 188.264 88.1833 190.446 88.1809H375.392C377.575 88.1824 379.668 89.0503 381.212 90.5939C382.756 92.1375 383.624 94.2307 383.625 96.4137V191.538H384.149C384.341 191.536 384.532 191.544 384.724 191.563V96.4137C384.72 93.94 383.736 91.5687 381.986 89.8195C380.237 88.0704 377.866 87.0861 375.392 87.0825Z" fill="#3F3D56" />
                <path d="M224.444 158.796C238.29 158.796 249.515 147.571 249.515 133.724C249.515 119.877 238.29 108.653 224.444 108.653C210.597 108.653 199.372 119.877 199.372 133.724C199.372 147.571 210.597 158.796 224.444 158.796Z" fill="#D6787A" />
                <path d="M375.598 191.538H203.638C201.513 191.531 199.462 190.757 197.863 189.356L194.004 185.953L194.594 185.101L195.661 183.561L242.009 116.831L246.767 109.979C247.06 109.558 247.451 109.213 247.906 108.975C248.361 108.737 248.866 108.613 249.38 108.613C249.893 108.613 250.399 108.737 250.854 108.975C251.309 109.213 251.7 109.558 251.993 109.979L266.456 130.803V130.808L274.966 143.059L295.281 172.305L326.093 128.324C326.386 127.904 326.776 127.561 327.23 127.325C327.684 127.088 328.188 126.965 328.7 126.965C329.212 126.965 329.717 127.088 330.17 127.325C330.624 127.561 331.014 127.904 331.308 128.324L351.074 156.533L352.208 158.155L374.879 190.511L375.598 191.538Z" fill="#3F3D56" />
                <path d="M283.744 123.852C280.777 123.849 277.85 124.536 275.192 125.857C272.535 127.178 270.221 129.098 268.432 131.465C266.512 130.639 264.416 130.302 262.334 130.486C260.251 130.669 258.247 131.367 256.5 132.516C254.754 133.666 253.32 135.231 252.328 137.071C251.336 138.911 250.817 140.969 250.816 143.06H302.952C302.952 140.537 302.456 138.04 301.49 135.709C300.525 133.379 299.11 131.261 297.327 129.477C295.543 127.694 293.425 126.279 291.095 125.314C288.764 124.348 286.267 123.852 283.744 123.852Z" fill="white" />
                <path d="M193.968 184.547L187.583 178.921L187.567 178.911L187.547 178.896L187.531 178.88C187.331 178.737 187.131 178.588 186.936 178.434C186.884 178.398 186.838 178.362 186.792 178.326C186.766 178.306 186.746 178.29 186.72 178.27C186.71 178.264 186.705 178.254 186.694 178.249C186.551 178.136 186.402 178.018 186.258 177.9C186.186 177.849 186.12 177.792 186.048 177.736C185.853 177.577 185.658 177.412 185.463 177.248C185.257 177.074 185.052 176.899 184.847 176.72C184.842 176.714 184.831 176.709 184.826 176.704C184.785 176.668 184.749 176.632 184.708 176.601C184.513 176.427 184.318 176.252 184.123 176.068C183.959 175.919 183.795 175.765 183.635 175.616C183.487 175.477 183.338 175.339 183.194 175.19L183.163 175.159C183.055 175.057 182.948 174.949 182.835 174.836C182.727 174.733 182.624 174.625 182.522 174.518C182.414 174.415 182.311 174.307 182.214 174.199L182.132 174.117L182.106 174.092L181.115 173.214V174.584L181.716 175.113L182.214 175.554L192.761 184.855L193.752 185.733L194.004 185.953L194.24 185.609L194.594 185.101L193.968 184.547ZM347.26 190.511C347.276 190.85 347.301 191.194 347.327 191.538H383.625V190.511H347.26ZM193.968 184.547L187.583 178.921L187.567 178.911L187.547 178.896L187.531 178.88C187.331 178.737 187.131 178.588 186.936 178.434C186.884 178.398 186.838 178.362 186.792 178.326C186.766 178.306 186.746 178.29 186.72 178.27C186.71 178.264 186.705 178.254 186.694 178.249C186.551 178.136 186.402 178.018 186.258 177.9C186.186 177.849 186.12 177.792 186.048 177.736C185.853 177.577 185.658 177.412 185.463 177.248C185.257 177.074 185.052 176.899 184.847 176.72C184.842 176.714 184.831 176.709 184.826 176.704C184.785 176.668 184.749 176.632 184.708 176.601C184.513 176.427 184.318 176.252 184.123 176.068C183.959 175.919 183.795 175.765 183.635 175.616C183.487 175.477 183.338 175.339 183.194 175.19L183.163 175.159C183.055 175.057 182.948 174.949 182.835 174.836C182.727 174.733 182.624 174.625 182.522 174.518C182.414 174.415 182.311 174.307 182.214 174.199L182.132 174.117L182.106 174.092L181.115 173.214V174.584L181.716 175.113L182.214 175.554L192.761 184.855L193.752 185.733L194.004 185.953L194.24 185.609L194.594 185.101L193.968 184.547ZM374.879 190.511H347.26C347.276 190.85 347.301 191.194 347.327 191.538H375.598L374.879 190.511ZM193.968 184.547L187.583 178.921L187.567 178.911L187.547 178.896L187.531 178.88C187.331 178.737 187.131 178.588 186.936 178.434C186.884 178.398 186.838 178.362 186.792 178.326C186.766 178.306 186.746 178.29 186.72 178.27C186.71 178.264 186.705 178.254 186.694 178.249C186.551 178.136 186.402 178.018 186.258 177.9C186.186 177.849 186.12 177.792 186.048 177.736C185.853 177.577 185.658 177.412 185.463 177.248C185.257 177.074 185.052 176.899 184.847 176.72C184.842 176.714 184.831 176.709 184.826 176.704C184.785 176.668 184.749 176.632 184.708 176.601C184.513 176.427 184.318 176.252 184.123 176.068C183.959 175.919 183.795 175.765 183.635 175.616C183.487 175.477 183.338 175.339 183.194 175.19L183.163 175.159C183.055 175.057 182.948 174.949 182.835 174.836C182.727 174.733 182.624 174.625 182.522 174.518C182.414 174.415 182.311 174.307 182.214 174.199L182.132 174.117L182.106 174.092L181.115 173.214V174.584L181.716 175.113L182.214 175.554L192.761 184.855L193.752 185.733L194.004 185.953L194.24 185.609L194.594 185.101L193.968 184.547ZM169.043 162.569L158.968 153.684C157.375 152.278 155.323 151.502 153.199 151.503H123.013L123.275 152.529H153.199C155.074 152.528 156.885 153.212 158.29 154.454L167.837 162.877L181.115 174.584V173.214L169.043 162.569ZM384.724 190.532C384.534 190.516 384.344 190.511 384.149 190.511H203.638C201.902 190.513 200.218 189.927 198.859 188.848C198.751 188.766 198.648 188.679 198.546 188.586L194.963 185.425L194.594 185.101L193.968 184.547L187.583 178.921L187.567 178.911L187.547 178.896L187.531 178.88L183.266 175.113L182.214 174.184L182.132 174.117L182.106 174.092L181.115 173.214L169.043 162.569L158.968 153.684C157.375 152.278 155.324 151.502 153.199 151.503H109.037C106.724 151.506 104.507 152.426 102.871 154.062C101.235 155.698 100.315 157.915 100.312 160.228V323.447C100.315 325.761 101.235 327.978 102.871 329.614C104.507 331.249 106.724 332.17 109.037 332.173H384.149C386.462 332.17 388.679 331.249 390.315 329.614C391.951 327.978 392.871 325.761 392.874 323.447V199.237C392.87 197.023 392.027 194.894 390.514 193.278C389.001 191.662 386.932 190.681 384.724 190.532L384.724 190.532ZM391.848 323.447C391.845 325.489 391.033 327.445 389.59 328.889C388.147 330.332 386.19 331.144 384.149 331.146H109.037C106.996 331.144 105.039 330.332 103.596 328.889C102.153 327.445 101.341 325.489 101.338 323.447V160.228C101.341 158.187 102.153 156.23 103.596 154.787C105.039 153.344 106.996 152.532 109.037 152.529H153.199C155.074 152.528 156.885 153.212 158.29 154.454L167.837 162.877L181.115 174.584L181.716 175.113L182.214 175.554L192.761 184.855L193.752 185.733L194.004 185.953L197.863 189.356C199.462 190.757 201.513 191.531 203.638 191.538H384.149C384.341 191.536 384.533 191.544 384.724 191.563C386.659 191.71 388.468 192.581 389.789 194.004C391.11 195.427 391.845 197.295 391.848 199.237L391.848 323.447ZM193.968 184.547L187.583 178.921L187.567 178.911L187.547 178.896L187.531 178.88C187.331 178.737 187.131 178.588 186.936 178.434C186.884 178.398 186.838 178.362 186.792 178.326C186.766 178.306 186.746 178.29 186.72 178.27C186.71 178.264 186.705 178.254 186.694 178.249C186.551 178.136 186.402 178.018 186.258 177.9C186.186 177.849 186.12 177.792 186.048 177.736C185.853 177.577 185.658 177.412 185.463 177.248C185.257 177.074 185.052 176.899 184.847 176.72C184.842 176.714 184.831 176.709 184.826 176.704C184.785 176.668 184.749 176.632 184.708 176.601C184.513 176.427 184.318 176.252 184.123 176.068C183.959 175.919 183.795 175.765 183.635 175.616C183.487 175.477 183.338 175.339 183.194 175.19L183.163 175.159C183.056 175.057 182.948 174.949 182.835 174.836C182.727 174.733 182.624 174.625 182.522 174.518C182.414 174.415 182.311 174.307 182.214 174.199L182.132 174.117L182.106 174.092L181.116 173.214V174.584L181.716 175.113L182.214 175.554L192.762 184.855L193.752 185.733L194.004 185.953L194.24 185.609L194.594 185.101L193.968 184.547ZM347.26 190.511C347.276 190.85 347.301 191.194 347.327 191.538H383.625V190.511H347.26ZM193.968 184.547L187.583 178.921L187.567 178.911L187.547 178.896L187.531 178.88C187.331 178.737 187.131 178.588 186.936 178.434C186.884 178.398 186.838 178.362 186.792 178.326C186.766 178.306 186.746 178.29 186.72 178.27C186.71 178.264 186.705 178.254 186.694 178.249C186.551 178.136 186.402 178.018 186.258 177.9C186.186 177.849 186.12 177.792 186.048 177.736C185.853 177.577 185.658 177.412 185.463 177.248C185.257 177.074 185.052 176.899 184.847 176.72C184.842 176.714 184.831 176.709 184.826 176.704C184.785 176.668 184.749 176.632 184.708 176.601C184.513 176.427 184.318 176.252 184.123 176.068C183.959 175.919 183.795 175.765 183.635 175.616C183.487 175.477 183.338 175.339 183.194 175.19L183.163 175.159C183.056 175.057 182.948 174.949 182.835 174.836C182.727 174.733 182.624 174.625 182.522 174.518C182.414 174.415 182.311 174.307 182.214 174.199L182.132 174.117L182.106 174.092L181.116 173.214V174.584L181.716 175.113L182.214 175.554L192.762 184.855L193.752 185.733L194.004 185.953L194.24 185.609L194.594 185.101L193.968 184.547ZM193.968 184.547L187.583 178.921L187.567 178.911L187.547 178.896L187.531 178.88C187.331 178.737 187.131 178.588 186.936 178.434C186.884 178.398 186.838 178.362 186.792 178.326C186.766 178.306 186.746 178.29 186.72 178.27C186.71 178.264 186.705 178.254 186.694 178.249C186.551 178.136 186.402 178.018 186.258 177.9C186.186 177.849 186.12 177.792 186.048 177.736C185.853 177.577 185.658 177.412 185.463 177.248C185.257 177.074 185.052 176.899 184.847 176.72C184.842 176.714 184.831 176.709 184.826 176.704C184.785 176.668 184.749 176.632 184.708 176.601C184.513 176.427 184.318 176.252 184.123 176.068C183.959 175.919 183.795 175.765 183.635 175.616C183.487 175.477 183.338 175.339 183.194 175.19L183.163 175.159C183.056 175.057 182.948 174.949 182.835 174.836C182.727 174.733 182.624 174.625 182.522 174.518C182.414 174.415 182.311 174.307 182.214 174.199L182.132 174.117L182.106 174.092L181.116 173.214V174.584L181.716 175.113L182.214 175.554L192.762 184.855L193.752 185.733L194.004 185.953L194.24 185.609L194.594 185.101L193.968 184.547ZM374.879 190.511H347.26C347.276 190.85 347.301 191.194 347.327 191.538H375.598L374.879 190.511Z" fill="#3F3D56" />
                <path d="M27.171 160.536V148.423C27.171 143.591 29.0907 138.956 32.5078 135.539C35.9249 132.122 40.5595 130.202 45.392 130.202C50.2245 130.202 54.8591 132.122 58.2762 135.539C61.6933 138.956 63.613 143.591 63.613 148.423V160.536C63.6127 160.795 63.5099 161.043 63.327 161.225C63.1441 161.408 62.8962 161.511 62.6376 161.511H61.5424C61.3537 161.511 61.1692 161.457 61.011 161.354C60.8528 161.251 60.7278 161.104 60.6511 160.932L60.3914 160.348C60.3484 160.251 60.2734 160.172 60.179 160.124C60.0847 160.076 59.9767 160.062 59.8731 160.084C59.7695 160.106 59.6766 160.163 59.6099 160.245C59.5433 160.327 59.5069 160.43 59.5069 160.536C59.5066 160.795 59.4037 161.043 59.2209 161.225C59.038 161.408 58.7901 161.511 58.5315 161.511H28.1464C27.8878 161.511 27.6399 161.408 27.457 161.225C27.2742 161.043 27.1713 160.795 27.171 160.536Z" fill="#2F2E41" />
                <path d="M65.4355 325.148H71.7281L74.7215 300.877L65.4344 300.877L65.4355 325.148Z" fill="#FFE9CE" />
                <path d="M83.8638 330.991L64.0872 330.992L64.0868 323.351L76.2225 323.35C78.249 323.35 80.1925 324.155 81.6255 325.588C83.0586 327.021 83.8637 328.964 83.8638 330.991Z" fill="#2F2E41" />
                <path d="M18.7281 325.148H25.0207L28.0141 300.877L18.7271 300.877L18.7281 325.148Z" fill="#FFE9CE" />
                <path d="M37.1564 330.991L17.3798 330.992L17.3794 323.351L29.5151 323.35C31.5416 323.35 33.4851 324.155 34.9181 325.588C36.3512 327.021 37.1563 328.964 37.1564 330.991Z" fill="#2F2E41" />
                <path d="M55.1973 303.387L43.0301 253.934C42.9272 253.516 42.6777 253.149 42.327 252.899C41.9763 252.65 41.5478 252.535 41.1193 252.574C40.6907 252.614 40.2908 252.807 39.9922 253.117C39.6935 253.427 39.5161 253.833 39.4921 254.263L36.7837 302.629C36.7663 302.936 36.6877 303.237 36.5525 303.513C36.4172 303.79 36.228 304.037 35.996 304.239C35.764 304.441 35.4938 304.595 35.2014 304.692C34.909 304.788 34.6003 304.825 34.2934 304.801L12.6603 303.071C12.0712 303.024 11.5224 302.753 11.1271 302.314C10.7318 301.874 10.5201 301.3 10.5356 300.709C10.8204 290.068 16.2672 215.829 31.8027 199.601C32.0763 199.321 32.4165 199.116 32.7914 199.004C33.1662 198.893 33.5633 198.879 33.9451 198.963L54.6916 204.61C55.1198 204.704 55.5124 204.918 55.8239 205.226C56.1354 205.535 56.3529 205.925 56.4511 206.353L79.3093 298.489C79.3774 298.791 79.3843 299.103 79.3296 299.407C79.2749 299.711 79.1598 300.001 78.9911 300.259C78.8224 300.518 78.6034 300.741 78.3473 300.913C78.0911 301.086 77.8029 301.205 77.4997 301.265L57.8838 305.102C57.3014 305.217 56.6971 305.103 56.1967 304.784C55.6963 304.464 55.3383 303.964 55.1973 303.387H55.1973Z" fill="#2F2E41" />
                <path d="M47.8815 161.244C54.8438 161.244 60.4879 155.6 60.4879 148.637C60.4879 141.675 54.8438 136.031 47.8815 136.031C40.9192 136.031 35.2751 141.675 35.2751 148.637C35.2751 155.6 40.9192 161.244 47.8815 161.244Z" fill="#FFE9CE" />
                <path d="M54.4306 205.981L32.6653 201.095C32.1919 200.989 31.7639 200.737 31.4421 200.374C31.1204 200.011 30.9213 199.555 30.8731 199.073L29.3592 184.072C28.95 180.068 30.0248 176.053 32.3797 172.789C34.7346 169.524 38.2058 167.238 42.1346 166.363C42.3093 166.325 42.4838 166.287 42.6581 166.251H42.6582C45.3629 165.684 48.168 165.82 50.805 166.646C53.442 167.473 55.8228 168.963 57.7195 170.973C59.6671 172.999 61.0622 175.491 61.7714 178.211C62.4806 180.93 62.4801 183.786 61.77 186.506L57.1729 204.305C57.0473 204.8 56.76 205.24 56.3565 205.554C55.9531 205.867 55.4565 206.038 54.9453 206.038C54.7721 206.038 54.5996 206.019 54.4306 205.981Z" fill="#D6787A" />
                <path d="M0.467211 228.726C0.167391 228.114 0.00532008 227.444 -0.0075863 226.763C-0.0204927 226.082 0.11608 225.406 0.392511 224.784C0.668943 224.161 1.07851 223.607 1.59237 223.16C2.10622 222.713 2.71186 222.384 3.36663 222.196L19.1204 190.001L27.2472 196.053L9.2654 225.7C9.5079 226.821 9.33081 227.992 8.76769 228.991C8.20456 229.99 7.29453 230.748 6.21004 231.121C5.12554 231.494 3.94193 231.456 2.88348 231.014C1.82504 230.573 0.965301 229.759 0.467188 228.726H0.467211Z" fill="#FFE9CE" />
                <path d="M107.634 211.398C107.634 210.717 107.485 210.044 107.196 209.427C106.908 208.809 106.488 208.263 105.966 207.826C105.444 207.388 104.832 207.071 104.174 206.896C103.515 206.72 102.827 206.692 102.156 206.811L73.8382 184.839L69.2053 193.85L98.4025 212.555C98.6782 213.668 99.3527 214.641 100.298 215.29C101.244 215.939 102.394 216.219 103.532 216.077C104.67 215.934 105.716 215.379 106.472 214.517C107.228 213.654 107.642 212.545 107.634 211.398H107.634Z" fill="#FFE9CE" />
                <path d="M26.5483 198.628C26.2279 198.628 25.9126 198.547 25.6319 198.392L17.1009 193.703C16.6724 193.468 16.3504 193.077 16.2014 192.611C16.0523 192.146 16.0873 191.641 16.2994 191.2L24.8926 173.343C25.6727 171.666 27.0398 170.334 28.7356 169.597C29.9548 169.081 31.2905 168.904 32.602 169.084C33.9135 169.264 35.1521 169.794 36.1875 170.619C36.9905 171.247 37.6468 172.043 38.1109 172.951C38.6783 174.03 38.9678 175.233 38.9533 176.452C38.9387 177.67 38.6205 178.866 38.0274 179.931L28.2243 197.643C28.0583 197.942 27.8153 198.191 27.5206 198.364C27.2259 198.537 26.8902 198.628 26.5483 198.628Z" fill="#D6787A" />
                <path d="M69.489 195.482L52.8896 183.894C51.8884 183.199 51.0763 182.266 50.5267 181.178C49.9772 180.09 49.7075 178.883 49.7422 177.664C49.7591 176.645 49.998 175.641 50.4423 174.723C51.0088 173.527 51.8875 172.505 52.9859 171.766C54.0843 171.027 55.3616 170.599 56.6833 170.525C58.5304 170.44 60.3446 171.035 61.7831 172.197L77.3599 184.448C77.7443 184.75 77.9981 185.188 78.0692 185.672C78.1403 186.155 78.0233 186.648 77.7423 187.048L72.1466 195.014C71.8555 195.427 71.4125 195.709 70.9144 195.797C70.4164 195.884 69.9039 195.771 69.489 195.482Z" fill="#D6787A" />
                <path d="M33.3302 144.317C33.3302 140.846 34.7091 137.517 37.1637 135.062C39.6182 132.608 42.9473 131.229 46.4185 131.229C49.8898 131.229 53.2188 132.608 55.6734 135.062C58.1279 137.517 59.5068 140.846 59.5068 144.317V145.087H56.1182C55.9802 145.087 55.8443 145.054 55.7216 144.991C55.5989 144.928 55.493 144.836 55.4126 144.724L54.7972 143.863C54.7515 143.799 54.6857 143.752 54.6103 143.729C54.5348 143.707 54.454 143.71 54.3806 143.739C54.3072 143.767 54.2455 143.819 54.2052 143.887C54.1649 143.955 54.1482 144.034 54.158 144.112C54.1733 144.234 54.1625 144.358 54.1262 144.475C54.09 144.593 54.0291 144.701 53.9478 144.794C53.8664 144.886 53.7663 144.96 53.6542 145.01C53.5421 145.061 53.4205 145.087 53.2975 145.087H33.3302V144.317Z" fill="#2F2E41" />
                <path d="M370.075 325.757H120.544C118.378 325.755 116.301 324.893 114.769 323.361C113.238 321.829 112.376 319.752 112.373 317.586V169.544C112.376 167.377 113.238 165.301 114.769 163.769C116.301 162.237 118.378 161.375 120.544 161.373C122.46 161.375 124.297 162.137 125.652 163.492C127.007 164.847 127.769 166.684 127.771 168.6V307.834C127.774 309.864 128.581 311.811 130.017 313.246C131.452 314.682 133.399 315.489 135.429 315.492H369.232C370.394 315.479 371.526 315.855 372.449 316.561C373.371 317.267 374.03 318.262 374.322 319.386C374.648 320.452 374.607 321.597 374.206 322.638C373.806 323.678 373.068 324.554 372.111 325.127C371.504 325.522 370.799 325.74 370.075 325.757Z" fill="white" />
            </g>
            <defs>
                <clipPath id="clip0_122_194">
                    <rect width="392.874" height="332.173" fill="white" />
                </clipPath>
            </defs>
        </svg>
    );
}